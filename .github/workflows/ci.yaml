# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        toolchain: ["1.65", "stable"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: dtolnay/rust-toolchain@fc3253060d0c959bea12a59f10f8391454a0b02d
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: Build workspace
        run: cargo build --verbose
      # Catch individual crates not enabling all features they need.
      - name: Build individual crates
        if: matrix.os != 'windows-latest'
        run:
          for crate in native-pkcs11 native-pkcs11-core native-pkcs11-traits
          pkcs11-sys native-pkcs11-keychain native-pkcs11-windows; do cargo
          build -p $crate || exit 1 ; done

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: EmbarkStudios/cargo-deny-action@8af37f5d0c77859223226de776036f7f691e1469 # v1.5.0

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v1.2.0
      - uses: dtolnay/rust-toolchain@fc3253060d0c959bea12a59f10f8391454a0b02d
        with:
          toolchain: stable
          components: rustfmt, clippy
      - run: cargo clippy
